<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_t_m_s_main_window_1_1_comm_t_m_s" kind="class" language="C#" prot="public">
    <compoundname>TMSMainWindow::CommTMS</compoundname>
    <basecompoundref refid="class_t_m_s_main_window_1_1_communicate" prot="public" virt="non-virtual">TMSMainWindow.Communicate</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a5611c9f2acdf8df552b0e2daba8666de" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string TMSMainWindow.CommTMS.connStr</definition>
        <argsstring></argsstring>
        <name>connStr</name>
        <briefdescription>
<para>SQL command to connect to databse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="27" column="23" bodyfile="CommTMS.cs" bodystart="27" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a9a567a4e1d0719d7cb523e0d125225c1" prot="public" static="no" mutable="no">
        <type>MySqlConnection</type>
        <definition>MySqlConnection TMSMainWindow.CommTMS.conn</definition>
        <argsstring></argsstring>
        <name>conn</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="28" column="32" bodyfile="CommTMS.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a9a80e254c911639b11169cce53468edc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TMSMainWindow.CommTMS.CommTMS</definition>
        <argsstring>(string DbUserName, string DbPassword, string DbIP, int DbPort, string DbName)</argsstring>
        <name>CommTMS</name>
        <param>
          <type>string</type>
          <declname>DbUserName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>DbPassword</declname>
        </param>
        <param>
          <type>string</type>
          <declname>DbIP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>DbPort</declname>
        </param>
        <param>
          <type>string</type>
          <declname>DbName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="35" column="16" bodyfile="CommTMS.cs" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1af7fd431e825eb902eb3a1001eb5bedc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int TMSMainWindow.CommTMS.InsertOrder</definition>
        <argsstring>(Order newOrder)</argsstring>
        <name>InsertOrder</name>
        <param>
          <type><ref refid="class_t_m_s_main_window_1_1_order" kindref="compound">Order</ref></type>
          <declname>newOrder</declname>
        </param>
        <briefdescription>
<para>Called to insert a new order into the database. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, and inserts a newly created order into <linebreak/>
 an SQL database</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_t_m_s_main_window_1_1_order" kindref="compound">Order</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_order_8cs" kindref="compound">Order.cs</ref></para>
</simplesect>
<simplesect kind="return"><para>an int indicating success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="52" column="20" bodyfile="CommTMS.cs" bodystart="52" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1aa46a3f7550807621c1dd0be6befc6f1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int TMSMainWindow.CommTMS.CheckCustomer</definition>
        <argsstring>(string name)</argsstring>
        <name>CheckCustomer</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Called to see if a customer exists. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, and searches for a specific customer</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(string)</parametername>
</parameternamelist>
<parameterdescription>
<para>customer name</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an int of a customer&apos;s ID if method is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="90" column="20" bodyfile="CommTMS.cs" bodystart="90" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1ab6b2c8b20558559d4ef7bdd3bfae18b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int TMSMainWindow.CommTMS.AddCustomer</definition>
        <argsstring>(string name)</argsstring>
        <name>AddCustomer</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Called to add a customer to the database. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, and inserts a customer</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(string)</parametername>
</parameternamelist>
<parameterdescription>
<para>customer name</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an int of a customer&apos;s ID if method is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="115" column="20" bodyfile="CommTMS.cs" bodystart="115" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a3378478f3d894fb9efe9b6a2a881cb26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TMSMainWindow.CommTMS.AvailableCarriers</definition>
        <argsstring>(string cityL, int orderID)</argsstring>
        <name>AvailableCarriers</name>
        <param>
          <type>string</type>
          <declname>cityL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orderID</declname>
        </param>
        <briefdescription>
<para>view carriers in a city </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, checks cities against an orderID. The method will see which cities are within a specific order. The method then connects to a different database table, and updates it with the cities within a specific order</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(string)</parametername>
</parameternamelist>
<parameterdescription>
<para>cityL, (int) orderID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>N/A </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="139" column="21" bodyfile="CommTMS.cs" bodystart="139" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a9da0369b5dfbd2b3e89d0de1ae0097b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_t_m_s_main_window_1_1_order" kindref="compound">Order</ref> &gt;</type>
        <definition>List&lt; Order &gt; TMSMainWindow.CommTMS.ListOpenOrders</definition>
        <argsstring>()</argsstring>
        <name>ListOpenOrders</name>
        <briefdescription>
<para>Called to generate a list of open orders. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, goes through the &apos;orders&apos; table. All of the orders with a 0 status for &apos;confirmed&apos; (so not confirmed) will be pulled from the database. Every order which has not yet been confirmed will be added to a list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N/A</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list of open orders </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="181" column="21" bodyfile="CommTMS.cs" bodystart="181" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a64b8056b7a5d1f99c0d572d44071a286" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_t_m_s_main_window_1_1_order" kindref="compound">Order</ref> &gt;</type>
        <definition>List&lt; Order &gt; TMSMainWindow.CommTMS.ListCompletedOrders</definition>
        <argsstring>()</argsstring>
        <name>ListCompletedOrders</name>
        <briefdescription>
<para>Called to generate a list of confirmed orders. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, goes through the &apos;orders&apos; table. All of the orders with a 1 status for &apos;confirmed&apos; (so confirmed) will be pulled from the database. Every order which has been confirmed will be added to a list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N/A</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list of completed orders </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="215" column="21" bodyfile="CommTMS.cs" bodystart="215" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a2b720edebe2bc3f5fc6e0c6b099ae45a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string TMSMainWindow.CommTMS.GetCustomerName</definition>
        <argsstring>(int custID)</argsstring>
        <name>GetCustomerName</name>
        <param>
          <type>int</type>
          <declname>custID</declname>
        </param>
        <briefdescription>
<para>Called to retreive a customer name from their custID. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, and finds a specific customer ID. The name associated with that ID is retreived.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(int)</parametername>
</parameternamelist>
<parameterdescription>
<para>custID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(string) customer&apos;s name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="251" column="23" bodyfile="CommTMS.cs" bodystart="251" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1ab4a255d126c1cf04a5696393b0e647ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; string &gt;</type>
        <definition>List&lt; string &gt; TMSMainWindow.CommTMS.DisplayCarriers</definition>
        <argsstring>(int orderID)</argsstring>
        <name>DisplayCarriers</name>
        <param>
          <type>int</type>
          <declname>orderID</declname>
        </param>
        <briefdescription>
<para>Called to retreive a list of carriers and their cities based on an OrderID. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, and finds a specific order ID from a cityList table. all associated cities from that orderID are returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(int)</parametername>
</parameternamelist>
<parameterdescription>
<para>orderID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(san array of (string) showing the cities within that order <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="278" column="21" bodyfile="CommTMS.cs" bodystart="278" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a775ca3920ad84c17965d3a8e8f3b8006" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string TMSMainWindow.CommTMS.GetRouteKMSHRS</definition>
        <argsstring>(string depart, string destination, string direction)</argsstring>
        <name>GetRouteKMSHRS</name>
        <param>
          <type>string</type>
          <declname>depart</declname>
        </param>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>string</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Calculates the KM&apos;s and hours a route takes. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method connects to a server, and finds a specific route ID from the routes table. For each city the KM&apos;s and hours will be taken out of that route. These values will be added together to determine the length of the trip.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(string)</parametername>
</parameternamelist>
<parameterdescription>
<para>depart location, (string) destination location, (string) direction</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string indicating the KM&apos;s and horus of a route </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="313" column="23" bodyfile="CommTMS.cs" bodystart="313" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a808cf1a4dae922bb5fd71706c43de063" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TMSMainWindow.CommTMS.PlanTrip</definition>
        <argsstring>(string trip, int orderNum)</argsstring>
        <name>PlanTrip</name>
        <param>
          <type>string</type>
          <declname>trip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orderNum</declname>
        </param>
        <briefdescription>
<para>Called to insert a planned trip into the database. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method gets destionation and departure cities from another fucntion. After the cities and direction are determined, the trip is inserted into a database.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(string)</parametername>
</parameternamelist>
<parameterdescription>
<para>trip, (int) order number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>N/A </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="379" column="21" bodyfile="CommTMS.cs" bodystart="379" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a5c6ca82be276010e09c851a6cc8b20d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TMSMainWindow.CommTMS.MarkOrderComplete</definition>
        <argsstring>(int orderID)</argsstring>
        <name>MarkOrderComplete</name>
        <param>
          <type>int</type>
          <declname>orderID</declname>
        </param>
        <briefdescription>
<para>Called to updates the order to completed. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method chamnges an OrderConfirmed value to &apos;1&apos;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(int)</parametername>
</parameternamelist>
<parameterdescription>
<para>orderID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>N/A </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="434" column="21" bodyfile="CommTMS.cs" bodystart="434" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1af4e18b83c7a2d2ef793bef0123e1ce8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int TMSMainWindow.CommTMS.GetCarrierID</definition>
        <argsstring>(string name, string city)</argsstring>
        <name>GetCarrierID</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>city</declname>
        </param>
        <briefdescription>
<para>Called to find a carrier with a specific name in a specific city. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches a database for a carrier name and a city. The carrierID value will be retreived from that entry in the database where the name and city match those of the database</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(string)</parametername>
</parameternamelist>
<parameterdescription>
<para>name, (string) city</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(int) carrierID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="454" column="20" bodyfile="CommTMS.cs" bodystart="454" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1aa563468056cbb4c05ff4e0438530ab47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string TMSMainWindow.CommTMS.GetCityFromCarrier</definition>
        <argsstring>(int CarrierID)</argsstring>
        <name>GetCityFromCarrier</name>
        <param>
          <type>int</type>
          <declname>CarrierID</declname>
        </param>
        <briefdescription>
<para>Called to get the Depot city of a carrier based on it&apos;s ID. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches a database for a carrierID. The depot city of the associated carrierID will be returned</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(int)</parametername>
</parameternamelist>
<parameterdescription>
<para>carrierID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(string) city </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="482" column="23" bodyfile="CommTMS.cs" bodystart="482" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1af817575c5fee2dcb40b96dff8b1d62b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int TMSMainWindow.CommTMS.InsertTrip</definition>
        <argsstring>(Trip newTrip)</argsstring>
        <name>InsertTrip</name>
        <param>
          <type><ref refid="class_t_m_s_main_window_1_1_trip" kindref="compound">Trip</ref></type>
          <declname>newTrip</declname>
        </param>
        <briefdescription>
<para>Called to insert a trip into the database. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches a database for a carrierID. The depot city of the associated carrierID will be returned</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(int)</parametername>
</parameternamelist>
<parameterdescription>
<para>carrierID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(string) city </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="510" column="20" bodyfile="CommTMS.cs" bodystart="510" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a54ff7f8e6f0500373545f79cc9a732b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_t_m_s_main_window_1_1_trip" kindref="compound">Trip</ref> &gt;</type>
        <definition>List&lt; Trip &gt; TMSMainWindow.CommTMS.ListOfTrips</definition>
        <argsstring>(int orderId)</argsstring>
        <name>ListOfTrips</name>
        <param>
          <type>int</type>
          <declname>orderId</declname>
        </param>
        <briefdescription>
<para>Called to create a list of trips from a specific order. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches a database for an orderID. According to that orderID, the database is searched for all trips associated wit that order. Those trips are added to a list, and returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(int)</parametername>
</parameternamelist>
<parameterdescription>
<para>orderID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of trips </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="536" column="21" bodyfile="CommTMS.cs" bodystart="536" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a39063f108bce1a18fc8111d4938a2f22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string TMSMainWindow.CommTMS.GetCarrierFromID</definition>
        <argsstring>(int carrierID)</argsstring>
        <name>GetCarrierFromID</name>
        <param>
          <type>int</type>
          <declname>carrierID</declname>
        </param>
        <briefdescription>
<para>Called to find a specific carrier from their ID. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches a database for a carrierID. According to that ID, the database is searched for the associated carrrier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(int)</parametername>
</parameternamelist>
<parameterdescription>
<para>carrierID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(string) name of carrier </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="573" column="23" bodyfile="CommTMS.cs" bodystart="573" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a796062b8ccf97eeea173590a4e6d8852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; string &gt;</type>
        <definition>List&lt; string &gt; TMSMainWindow.CommTMS.CitiesBetween</definition>
        <argsstring>(string depart, string destination, string direction)</argsstring>
        <name>CitiesBetween</name>
        <param>
          <type>string</type>
          <declname>depart</declname>
        </param>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>string</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Called to find all cities between an origin and a destination. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches between a departure and destination city, and find each city between them</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>(string)</parametername>
</parameternamelist>
<parameterdescription>
<para>depart, (string) destination, (string) direction</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of strings of cities between the depart and destination </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="597" column="21" bodyfile="CommTMS.cs" bodystart="597" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1aef313e4c6b333c9513510e6c066021e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; string &gt;</type>
        <definition>List&lt; string &gt; TMSMainWindow.CommTMS.DisplayCustomers</definition>
        <argsstring>()</argsstring>
        <name>DisplayCustomers</name>
        <briefdescription>
<para>Displays customers. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches the contract database and finds all active customers</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N/A</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of strings of customers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="657" column="21" bodyfile="CommTMS.cs" bodystart="657" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="class_t_m_s_main_window_1_1_comm_t_m_s_1a49a86fee4c39cee537155a617e9fdc6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_t_m_s_main_window_1_1_carrier" kindref="compound">Carrier</ref> &gt;</type>
        <definition>List&lt; Carrier &gt; TMSMainWindow.CommTMS.CarrierList</definition>
        <argsstring>()</argsstring>
        <name>CarrierList</name>
        <briefdescription>
<para>Called to get a list of carriers from the database and their data. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Details</bold></para>
<para>Method searches a database, extracts all carrier information, and returns it in a list of objects</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N/A</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of <ref refid="class_t_m_s_main_window_1_1_carrier" kindref="compound">Carrier</ref> objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CommTMS.cs" line="685" column="21" bodyfile="CommTMS.cs" bodystart="685" bodyend="711"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Communicate</label>
        <link refid="class_t_m_s_main_window_1_1_communicate"/>
      </node>
      <node id="1">
        <label>TMSMainWindow.CommTMS</label>
        <link refid="class_t_m_s_main_window_1_1_comm_t_m_s"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Communicate</label>
        <link refid="class_t_m_s_main_window_1_1_communicate"/>
      </node>
      <node id="1">
        <label>TMSMainWindow.CommTMS</label>
        <link refid="class_t_m_s_main_window_1_1_comm_t_m_s"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CommTMS.cs" line="25" column="11" bodyfile="CommTMS.cs" bodystart="26" bodyend="763"/>
    <listofallmembers>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1ab6b2c8b20558559d4ef7bdd3bfae18b0" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>AddCustomer</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a3378478f3d894fb9efe9b6a2a881cb26" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>AvailableCarriers</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a49a86fee4c39cee537155a617e9fdc6b" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>CarrierList</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1aa46a3f7550807621c1dd0be6befc6f1d" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>CheckCustomer</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a796062b8ccf97eeea173590a4e6d8852" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>CitiesBetween</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a9a80e254c911639b11169cce53468edc" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>CommTMS</name></member>
      <member refid="class_t_m_s_main_window_1_1_communicate_1abe43ad9b47229f8bcb7777e361e881cf" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>Communicate</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a9a567a4e1d0719d7cb523e0d125225c1" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>conn</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a5611c9f2acdf8df552b0e2daba8666de" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>connStr</name></member>
      <member refid="class_t_m_s_main_window_1_1_communicate_1aba5a2f550e3b505dc550b242e6a67627" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>DbIP</name></member>
      <member refid="class_t_m_s_main_window_1_1_communicate_1a8f4b006365927d49dbd226bc29b9cfc1" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>DbName</name></member>
      <member refid="class_t_m_s_main_window_1_1_communicate_1acdc8fe131e431e5315b448b23b22e29d" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>DbPassword</name></member>
      <member refid="class_t_m_s_main_window_1_1_communicate_1a3a101124c5070f67bdcc148f3a3093b5" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>DbPort</name></member>
      <member refid="class_t_m_s_main_window_1_1_communicate_1abc7531dabe10ed197f4c6e5c3112f46f" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>DbUser</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1ab4a255d126c1cf04a5696393b0e647ec" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>DisplayCarriers</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1aef313e4c6b333c9513510e6c066021e4" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>DisplayCustomers</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a39063f108bce1a18fc8111d4938a2f22" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>GetCarrierFromID</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1af4e18b83c7a2d2ef793bef0123e1ce8a" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>GetCarrierID</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1aa563468056cbb4c05ff4e0438530ab47" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>GetCityFromCarrier</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a2b720edebe2bc3f5fc6e0c6b099ae45a" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>GetCustomerName</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a775ca3920ad84c17965d3a8e8f3b8006" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>GetRouteKMSHRS</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1af7fd431e825eb902eb3a1001eb5bedc4" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>InsertOrder</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1af817575c5fee2dcb40b96dff8b1d62b5" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>InsertTrip</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a64b8056b7a5d1f99c0d572d44071a286" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>ListCompletedOrders</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a54ff7f8e6f0500373545f79cc9a732b5" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>ListOfTrips</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a9da0369b5dfbd2b3e89d0de1ae0097b9" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>ListOpenOrders</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a5c6ca82be276010e09c851a6cc8b20d6" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>MarkOrderComplete</name></member>
      <member refid="class_t_m_s_main_window_1_1_comm_t_m_s_1a808cf1a4dae922bb5fd71706c43de063" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>PlanTrip</name></member>
      <member refid="class_t_m_s_main_window_1_1_communicate_1a19eb594004b930935448078d2890a461" prot="public" virt="non-virtual"><scope>TMSMainWindow::CommTMS</scope><name>RetrieveContracts</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
